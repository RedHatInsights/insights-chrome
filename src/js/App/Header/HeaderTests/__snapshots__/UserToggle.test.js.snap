// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedUserToggle -- not org admin should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(UserToggle)>
    <UserToggle
      account={
        Object {
          "isOrgAdmin": false,
          "name": "someFirstName someLastName",
          "number": "some accountNumber",
          "username": "someUsername",
        }
      }
      dispatch={[Function]}
      extraItems={Array []}
      isSmall={false}
    >
      <Component
        aria-label="Overflow actions"
        dropdownItems={
          Array [
            <Unknown
              isDisabled={true}
            >
              <dl
                className="ins-c-dropdown-item__stack"
              >
                <dt
                  className="ins-c-dropdown-item__stack--header"
                >
                  Username:
                </dt>
                <dd
                  className="ins-c-dropdown-item__stack--value"
                >
                  someUsername
                </dd>
              </dl>
            </Unknown>,
            <React.Fragment />,
            <Unknown />,
            <Unknown
              href="https://www.qa.redhat.com/wapps/ugc/protected/personalInfo.html"
              rel="noopener noreferrer"
              target="_blank"
            >
              My profile
            </Unknown>,
            <Unknown
              href="./user-preferences/email"
            >
              User Preferences
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              Log out
            </Unknown>,
            Array [],
          ]
        }
        isOpen={false}
        isPlain={true}
        onSelect={[Function]}
        position="right"
        toggle={
          <Unknown
            className="ins-c-toolbar__menu-user"
            id="UserMenu"
            onToggle={[Function]}
            widget-type="UserMenu"
          >
            someFirstName someLastName
          </Unknown>
        }
        widget-type="InsightsOverflowActions"
      >
        <DropdownWithContext
          aria-label="Overflow actions"
          autoFocus={true}
          className=""
          direction="down"
          dropdownItems={
            Array [
              <Unknown
                isDisabled={true}
              >
                <dl
                  className="ins-c-dropdown-item__stack"
                >
                  <dt
                    className="ins-c-dropdown-item__stack--header"
                  >
                    Username:
                  </dt>
                  <dd
                    className="ins-c-dropdown-item__stack--value"
                  >
                    someUsername
                  </dd>
                </dl>
              </Unknown>,
              <React.Fragment />,
              <Unknown />,
              <Unknown
                href="https://www.qa.redhat.com/wapps/ugc/protected/personalInfo.html"
                rel="noopener noreferrer"
                target="_blank"
              >
                My profile
              </Unknown>,
              <Unknown
                href="./user-preferences/email"
              >
                User Preferences
              </Unknown>,
              <Unknown
                component="button"
                onClick={[Function]}
              >
                Log out
              </Unknown>,
              Array [],
            ]
          }
          isGrouped={false}
          isOpen={false}
          isPlain={true}
          onSelect={[Function]}
          ouiaComponentType="Dropdown"
          position="right"
          toggle={
            <Unknown
              className="ins-c-toolbar__menu-user"
              id="UserMenu"
              onToggle={[Function]}
              widget-type="UserMenu"
            >
              someFirstName someLastName
            </Unknown>
          }
          widget-type="InsightsOverflowActions"
        >
          <div
            aria-label="Overflow actions"
            className="pf-c-dropdown pf-m-align-right"
            data-ouia-component-id={0}
            data-ouia-component-type="PF4/Dropdown"
            data-ouia-safe={true}
            widget-type="InsightsOverflowActions"
          >
            <Component
              aria-haspopup={true}
              className="ins-c-toolbar__menu-user"
              id="UserMenu"
              isOpen={false}
              isPlain={true}
              key=".0"
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    aria-label="Overflow actions"
                    class="pf-c-dropdown pf-m-align-right"
                    data-ouia-component-id="0"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                    widget-type="InsightsOverflowActions"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle pf-m-plain ins-c-toolbar__menu-user"
                      id="UserMenu"
                      type="button"
                      widget-type="UserMenu"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        someFirstName someLastName
                      </span>
                      <span
                        class="pf-c-dropdown__toggle-icon"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                            transform=""
                          />
                        </svg>
                      </span>
                    </button>
                  </div>,
                }
              }
              widget-type="UserMenu"
            >
              <Toggle
                aria-haspopup={true}
                bubbleEvent={false}
                className="ins-c-toolbar__menu-user"
                id="UserMenu"
                isActive={false}
                isDisabled={false}
                isOpen={false}
                isPlain={true}
                isPrimary={false}
                isSplitButton={false}
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      aria-label="Overflow actions"
                      class="pf-c-dropdown pf-m-align-right"
                      data-ouia-component-id="0"
                      data-ouia-component-type="PF4/Dropdown"
                      data-ouia-safe="true"
                      widget-type="InsightsOverflowActions"
                    >
                      <button
                        aria-expanded="false"
                        aria-haspopup="true"
                        class="pf-c-dropdown__toggle pf-m-plain ins-c-toolbar__menu-user"
                        id="UserMenu"
                        type="button"
                        widget-type="UserMenu"
                      >
                        <span
                          class="pf-c-dropdown__toggle-text"
                        >
                          someFirstName someLastName
                        </span>
                        <span
                          class="pf-c-dropdown__toggle-icon"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 320 512"
                            width="1em"
                          >
                            <path
                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                              transform=""
                            />
                          </svg>
                        </span>
                      </button>
                    </div>,
                  }
                }
                widget-type="UserMenu"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="pf-c-dropdown__toggle pf-m-plain ins-c-toolbar__menu-user"
                  disabled={false}
                  id="UserMenu"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                  widget-type="UserMenu"
                >
                  <span
                    className="pf-c-dropdown__toggle-text"
                  >
                    someFirstName someLastName
                  </span>
                  <span
                    className="pf-c-dropdown__toggle-icon"
                  >
                    <CaretDownIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </CaretDownIcon>
                  </span>
                </button>
              </Toggle>
            </Component>
          </div>
        </DropdownWithContext>
      </Component>
    </UserToggle>
  </Connect(UserToggle)>
</Provider>
`;

exports[`ConnectedUserToggle -- org admin should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(UserToggle)>
    <UserToggle
      account={
        Object {
          "isOrgAdmin": true,
          "name": "someFirstName someLastName",
          "number": "some accountNumber",
          "username": "someUsername",
        }
      }
      dispatch={[Function]}
      extraItems={Array []}
      isSmall={false}
    >
      <Component
        aria-label="Overflow actions"
        dropdownItems={
          Array [
            <Unknown
              isDisabled={true}
            >
              <dl
                className="ins-c-dropdown-item__stack"
              >
                <dt
                  className="ins-c-dropdown-item__stack--header"
                >
                  Username:
                </dt>
                <dd
                  className="ins-c-dropdown-item__stack--value"
                >
                  someUsername
                </dd>
                <dd
                  className="ins-c-dropdown-item__stack--subValue"
                >
                  Org. Administrator
                </dd>
              </dl>
            </Unknown>,
            <React.Fragment />,
            <Unknown />,
            <Unknown
              href="https://www.qa.redhat.com/wapps/ugc/protected/personalInfo.html"
              rel="noopener noreferrer"
              target="_blank"
            >
              My profile
            </Unknown>,
            <Unknown
              href="./user-preferences/email"
            >
              User Preferences
            </Unknown>,
            <Unknown
              component="button"
              onClick={[Function]}
            >
              Log out
            </Unknown>,
            Array [],
          ]
        }
        isOpen={false}
        isPlain={true}
        onSelect={[Function]}
        position="right"
        toggle={
          <Unknown
            className="ins-c-toolbar__menu-user"
            id="UserMenu"
            onToggle={[Function]}
            widget-type="UserMenu"
          >
            someFirstName someLastName
          </Unknown>
        }
        widget-type="InsightsOverflowActions"
      >
        <DropdownWithContext
          aria-label="Overflow actions"
          autoFocus={true}
          className=""
          direction="down"
          dropdownItems={
            Array [
              <Unknown
                isDisabled={true}
              >
                <dl
                  className="ins-c-dropdown-item__stack"
                >
                  <dt
                    className="ins-c-dropdown-item__stack--header"
                  >
                    Username:
                  </dt>
                  <dd
                    className="ins-c-dropdown-item__stack--value"
                  >
                    someUsername
                  </dd>
                  <dd
                    className="ins-c-dropdown-item__stack--subValue"
                  >
                    Org. Administrator
                  </dd>
                </dl>
              </Unknown>,
              <React.Fragment />,
              <Unknown />,
              <Unknown
                href="https://www.qa.redhat.com/wapps/ugc/protected/personalInfo.html"
                rel="noopener noreferrer"
                target="_blank"
              >
                My profile
              </Unknown>,
              <Unknown
                href="./user-preferences/email"
              >
                User Preferences
              </Unknown>,
              <Unknown
                component="button"
                onClick={[Function]}
              >
                Log out
              </Unknown>,
              Array [],
            ]
          }
          isGrouped={false}
          isOpen={false}
          isPlain={true}
          onSelect={[Function]}
          ouiaComponentType="Dropdown"
          position="right"
          toggle={
            <Unknown
              className="ins-c-toolbar__menu-user"
              id="UserMenu"
              onToggle={[Function]}
              widget-type="UserMenu"
            >
              someFirstName someLastName
            </Unknown>
          }
          widget-type="InsightsOverflowActions"
        >
          <div
            aria-label="Overflow actions"
            className="pf-c-dropdown pf-m-align-right"
            data-ouia-component-id={1}
            data-ouia-component-type="PF4/Dropdown"
            data-ouia-safe={true}
            widget-type="InsightsOverflowActions"
          >
            <Component
              aria-haspopup={true}
              className="ins-c-toolbar__menu-user"
              id="UserMenu"
              isOpen={false}
              isPlain={true}
              key=".0"
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    aria-label="Overflow actions"
                    class="pf-c-dropdown pf-m-align-right"
                    data-ouia-component-id="1"
                    data-ouia-component-type="PF4/Dropdown"
                    data-ouia-safe="true"
                    widget-type="InsightsOverflowActions"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle pf-m-plain ins-c-toolbar__menu-user"
                      id="UserMenu"
                      type="button"
                      widget-type="UserMenu"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        someFirstName someLastName
                      </span>
                      <span
                        class="pf-c-dropdown__toggle-icon"
                      >
                        <svg
                          aria-hidden="true"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                            transform=""
                          />
                        </svg>
                      </span>
                    </button>
                  </div>,
                }
              }
              widget-type="UserMenu"
            >
              <Toggle
                aria-haspopup={true}
                bubbleEvent={false}
                className="ins-c-toolbar__menu-user"
                id="UserMenu"
                isActive={false}
                isDisabled={false}
                isOpen={false}
                isPlain={true}
                isPrimary={false}
                isSplitButton={false}
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      aria-label="Overflow actions"
                      class="pf-c-dropdown pf-m-align-right"
                      data-ouia-component-id="1"
                      data-ouia-component-type="PF4/Dropdown"
                      data-ouia-safe="true"
                      widget-type="InsightsOverflowActions"
                    >
                      <button
                        aria-expanded="false"
                        aria-haspopup="true"
                        class="pf-c-dropdown__toggle pf-m-plain ins-c-toolbar__menu-user"
                        id="UserMenu"
                        type="button"
                        widget-type="UserMenu"
                      >
                        <span
                          class="pf-c-dropdown__toggle-text"
                        >
                          someFirstName someLastName
                        </span>
                        <span
                          class="pf-c-dropdown__toggle-icon"
                        >
                          <svg
                            aria-hidden="true"
                            fill="currentColor"
                            height="1em"
                            role="img"
                            style="vertical-align: -0.125em;"
                            viewBox="0 0 320 512"
                            width="1em"
                          >
                            <path
                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                              transform=""
                            />
                          </svg>
                        </span>
                      </button>
                    </div>,
                  }
                }
                widget-type="UserMenu"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="pf-c-dropdown__toggle pf-m-plain ins-c-toolbar__menu-user"
                  disabled={false}
                  id="UserMenu"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                  widget-type="UserMenu"
                >
                  <span
                    className="pf-c-dropdown__toggle-text"
                  >
                    someFirstName someLastName
                  </span>
                  <span
                    className="pf-c-dropdown__toggle-icon"
                  >
                    <CaretDownIcon
                      color="currentColor"
                      noVerticalAlign={false}
                      size="sm"
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </CaretDownIcon>
                  </span>
                </button>
              </Toggle>
            </Component>
          </div>
        </DropdownWithContext>
      </Component>
    </UserToggle>
  </Connect(UserToggle)>
</Provider>
`;

exports[`UserToggle should render correctly with isSmall false 1`] = `
<Component
  aria-label="Overflow actions"
  dropdownItems={
    Array [
      <Unknown
        isDisabled={true}
      >
        <dl
          className="ins-c-dropdown-item__stack"
        >
          <dt
            className="ins-c-dropdown-item__stack--header"
          >
            Username:
          </dt>
          <dd
            className="ins-c-dropdown-item__stack--value"
          />
        </dl>
      </Unknown>,
      <React.Fragment />,
      <Unknown />,
      <Unknown
        href="https://www.qa.redhat.com/wapps/ugc/protected/personalInfo.html"
        rel="noopener noreferrer"
        target="_blank"
      >
        My profile
      </Unknown>,
      <Unknown
        href="./user-preferences/email"
      >
        User Preferences
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        Log out
      </Unknown>,
      Array [],
    ]
  }
  isOpen={false}
  isPlain={true}
  onSelect={[Function]}
  position="right"
  toggle={
    <Unknown
      className="ins-c-toolbar__menu-user"
      id="UserMenu"
      onToggle={[Function]}
      widget-type="UserMenu"
    >
      someName
    </Unknown>
  }
  widget-type="InsightsOverflowActions"
/>
`;

exports[`UserToggle should render correctly with isSmall true 1`] = `
<Component
  aria-label="Overflow actions"
  dropdownItems={
    Array [
      <Unknown
        isDisabled={true}
      >
        <dl
          className="ins-c-dropdown-item__stack"
        >
          <dt
            className="ins-c-dropdown-item__stack--header"
          >
            Username:
          </dt>
          <dd
            className="ins-c-dropdown-item__stack--value"
          />
        </dl>
      </Unknown>,
      <React.Fragment />,
      <Unknown />,
      <Unknown
        href="https://www.qa.redhat.com/wapps/ugc/protected/personalInfo.html"
        rel="noopener noreferrer"
        target="_blank"
      >
        My profile
      </Unknown>,
      <Unknown
        href="./user-preferences/email"
      >
        User Preferences
      </Unknown>,
      <Unknown
        component="button"
        onClick={[Function]}
      >
        Log out
      </Unknown>,
      Array [],
    ]
  }
  isOpen={false}
  isPlain={true}
  onSelect={[Function]}
  position="right"
  toggle={
    <Unknown
      onToggle={[Function]}
    />
  }
  widget-type="InsightsOverflowActions"
/>
`;
